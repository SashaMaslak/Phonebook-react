{"version":3,"file":"static/js/89.daf09bb3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactListItem.module.css?16c0","components/ContactList/ContactListItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","helpers/filterContacts.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n   return (\n      <section className={css.section}>\n         <h1>{title}</h1>\n         {children}\n      </section>\n   );\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Section } from 'components/Section/Section';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChangeInputName = ({ target: { value } }) => {\n    setName(value);\n  };\n  const handleChangeInputNumber = ({ target: { value } }) => {\n    setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const allContacts = contacts.reduce((acc, contact) => {\n      acc.push(contact.name.toLocaleLowerCase());\n      return acc;\n    }, []);\n\n    if (allContacts.includes(name.toLocaleLowerCase())) {\n      alert(`${name} already in contacts.`);\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Section title={'Phonebook'}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          <input\n            className={css.form__input}\n            onChange={handleChangeInputName}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n          />\n        </label>\n        <label className={css.form__label}>\n          <input\n            className={css.form__input}\n            onChange={handleChangeInputNumber}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </Section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList__item\":\"ContactListItem_contactList__item__hYavu\",\"contactList__name\":\"ContactListItem_contactList__name__pAgbr\",\"contactList__number\":\"ContactListItem_contactList__number__W65Fh\",\"contactList__DeleteBtn\":\"ContactListItem_contactList__DeleteBtn__buMCz\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.contactList__item}>\n      <p className={css.contactList__name}>{name}</p>:\n      <p className={css.contactList__number}>{number}</p>\n      <button\n        className={css.contactList__DeleteBtn}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport { ContactListItem } from './ContactListItem';\nimport css from './ContactList.module.css';\n\n// helpers\nimport { filterContacts } from 'helpers/filterContacts';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export function filterContacts(contacts, filter) {\n   const filterValue = filter.toLowerCase().trim();\n   return contacts.filter((contact) => contact.name.toLowerCase().includes(filterValue));\n}","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"filterBtn\":\"Filter_filterBtn__BTiM7\"};","import { updateFilter } from 'redux/contacts/slice';\nimport { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const setFilterValue = ({ target: { value } }) => {\n    dispatch(updateFilter(value));\n  };\n\n  return (\n    <div className={css.filterBox}>\n      <p>Find contacts by name</p>\n      <input\n        className={css.filterBtn}\n        type=\"text\"\n        placeholder=\"filter name\"\n        onChange={setFilterValue}\n      />\n    </div>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Section","title","children","className","css","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","reset","onSubmit","e","preventDefault","allContacts","reduce","acc","contact","push","toLocaleLowerCase","includes","alert","addContact","onChange","value","target","type","placeholder","pattern","required","ContactListItem","id","onClick","deleteContact","ContactList","filteredContacts","filterValue","toLowerCase","trim","filterContacts","map","Filter","updateFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}